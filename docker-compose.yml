# This file defines the complete application stack, including the MinIO object storage service.
version: '3.8'

services:
  # The PostgreSQL Database Service
  postgres:
    image: postgres:15-alpine
    container_name: file_vault_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # The MinIO Object Storage Service
  minio:
    image: minio/minio:latest
    container_name: file_vault_minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_ACCESS_KEY}
    # This command starts the MinIO server and tells it to create a 'data' directory for storage.
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000" # The API port
      - "9001:9001" # The Web UI console port
    volumes:
      - minio_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 2s
      retries: 5

  # The Go Backend Application Service
  backend:
    build: .
    container_name: file_vault_backend
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_ACCESS_KEY_ID: ${MINIO_ACCESS_KEY_ID}
      MINIO_SECRET_ACCESS_KEY: ${MINIO_SECRET_ACCESS_KEY}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
      # --- ADD THESE TWO LINES ---
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_LIFETIME_HOURS: ${JWT_LIFETIME_HOURS}
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped

  # The Frontend Application Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: file_vault_frontend
    ports:
      - "3000:80" # We'll access the frontend on http://localhost:3000
    depends_on:
      - backend
    restart: unless-stopped

# Named volumes for persistent data storage for both services.
volumes:
  postgres_data:
  minio_data:
