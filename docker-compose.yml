# This is the final, simplified baseline configuration for development.
# It includes a persistent volume for the database and a shared volume for uploads.
version: '3.8'

services:
  # The PostgreSQL Database Service
  postgres:
    image: postgres:15-alpine
    container_name: file_vault_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    # This named volume ensures your database data persists even after you run 'docker-compose down'.
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # The Go Backend Application Service
  backend:
    build: .
    container_name: file_vault_backend
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: ${DATABASE_URL}
    # This is the "shared folder" link.
    volumes:
      # It links your local './uploads' folder to the '/root/uploads' folder inside the container.
      - ./uploads:/root/uploads
    # The backend now waits for the postgres service to pass its health check before starting.
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

# Defines the named volume for persistent database storage.
volumes:
  postgres_data: