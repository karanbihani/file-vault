// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: shares.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createPublicShareLink = `-- name: CreatePublicShareLink :one
INSERT INTO shares (user_file_id, share_token) VALUES ($1, $2) RETURNING id, user_file_id, share_token, is_public, download_count, created_at
`

type CreatePublicShareLinkParams struct {
	UserFileID int64
	ShareToken string
}

func (q *Queries) CreatePublicShareLink(ctx context.Context, arg CreatePublicShareLinkParams) (Share, error) {
	row := q.db.QueryRow(ctx, createPublicShareLink, arg.UserFileID, arg.ShareToken)
	var i Share
	err := row.Scan(
		&i.ID,
		&i.UserFileID,
		&i.ShareToken,
		&i.IsPublic,
		&i.DownloadCount,
		&i.CreatedAt,
	)
	return i, err
}

const getShareByToken = `-- name: GetShareByToken :one
SELECT s.id, s.download_count, uf.filename, pf.storage_path, pf.size_bytes
FROM shares s
JOIN user_files uf ON s.user_file_id = uf.id
JOIN physical_files pf ON uf.physical_file_id = pf.id
WHERE s.share_token = $1 AND s.is_public = TRUE
`

type GetShareByTokenRow struct {
	ID            int64
	DownloadCount pgtype.Int8
	Filename      string
	StoragePath   string
	SizeBytes     int64
}

// CORRECTED NAME: Changed from GetShareMetaByToken for clarity and consistency.
func (q *Queries) GetShareByToken(ctx context.Context, shareToken string) (GetShareByTokenRow, error) {
	row := q.db.QueryRow(ctx, getShareByToken, shareToken)
	var i GetShareByTokenRow
	err := row.Scan(
		&i.ID,
		&i.DownloadCount,
		&i.Filename,
		&i.StoragePath,
		&i.SizeBytes,
	)
	return i, err
}

const incrementShareDownloadCount = `-- name: IncrementShareDownloadCount :exec
UPDATE shares SET download_count = download_count + 1 WHERE id = $1
`

func (q *Queries) IncrementShareDownloadCount(ctx context.Context, id int64) error {
	_, err := q.db.Exec(ctx, incrementShareDownloadCount, id)
	return err
}
